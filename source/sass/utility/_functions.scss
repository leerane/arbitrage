// --- FUNCTIONS ---

// Color

@function color($color-map, $color-value) {
  @if map-has-key($color-map, $color-value) {
    @return map-get($color-map, $color-value);
  }
}

// Fonts

@function font-weight($weight) {
  @if map-has-key($font-weights, $weight) {
    @return map-get($font-weights, $weight);
  }
}

@function font-size($size) {
  @if map-has-key($font-sizes, $size) {
    @return map-get($font-sizes, $size);
  }
}

@function font-family($family) {
  @if map-has-key($font-stack, $family) {
    @return map-get($font-stack, $family);
  }
}

@function font-lh($line-height) {
  @if map-has-key($font-line-height, $line-height) {
    @return map-get($font-line-height, $line-height);
  }
}

// REM to PX

@function rem-separator($list, $separator: false) {
  @if $separator == "comma" or $separator == "space" {
    @return append($list, null, $separator);
  }

  @if function-exists("list-separator") == true {
    @return list-separator($list);
  }

  // list-separator polyfill by Hugo Giraudel (https://sass-compatibility.github.io/#list_separator_function)
  $test-list: ();
  @each $item in $list {
    $test-list: append($test-list, $item, space);
  }

  @return if($test-list == $list, space, comma);
}

@function rem-convert($to, $values...) {
  $result: ();
  $separator: rem-separator($values);

  @each $value in $values {
    @if type-of($value) == "number" and unit($value) == "rem" and $to == "px" {
      $result: append($result, $value / 1rem * $rem-baseline, $separator);
    } @else if type-of($value) == "number" and unit($value) == "px" and $to == "rem" {
      $result: append($result, $value / $rem-baseline * 1rem, $separator);
    } @else if type-of($value) == "list" {
      $value-separator: rem-separator($value);
      $value: rem-convert($to, $value...);
      $value: rem-separator($value, $value-separator);
      $result: append($result, $value, $separator);
    } @else {
      $result: append($result, $value, $separator);
    }
  }

  @return if(length($result) == 1, nth($result, 1), $result);
}

@function rem($values...) {
  @if $rem-px-only {
    @return rem-convert(px, $values...);
  } @else {
    @return rem-convert(rem, $values...);
  }
}

// Grids

@function breakpoint($bp-size) {
  @if map-has-key($breakpoints, $bp-size) {
    @return map-get($breakpoints, $bp-size);
  }
}
